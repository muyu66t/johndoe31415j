{
	"X.509 Certificate": {
		"_label": "X509Cert",
		"Public Key": {
			"RSA": {
				"_import": [ "rsa_algorithm/*", "rsa_crypto/*", "rsa_pubkey_encoding_issues/*" ]
			},
			"ECC": {
				"_import": [ "ecc_crypto/*", "ecdsa_pubkey_encoding_issues/*" ],
				"Domain Parameters": {
					"Name": {
						"Named Curve": { "_desc": "curve is named by its OID" },
						"Unkown Name": { "_desc": "curve name OID unknown" },
						"Explicit Curve": { "_desc": "curve has explicitly encoded domain parameters" },
						"Unknown Explicit": { "_desc": "explicit curve domain parameters are entirely unknown" },
						"Unused Name": { "_desc": "explicit curve domain parameters are equal to named curve" }
					}
				}
			},
			"DSA": {
				"_import": [ "dsa_crypto/*", "dsa_pubkey_encoding_issues/*" ]
			}
		},
		"Metadata": {
			"_label": "Body",
			"Version": {
				"Not 2": { "_desc": "certificate version is not v2" },
				"Not 3": { "_desc": "certificate version is not v3" }
			},
			"Validity": {
				"Status": {
					"Never valid": { "_desc": "certificate can never be valid" },
					"Not yet valid": { "_desc": "certificate is not yet valid" },
					"Expired": { "_desc": "certificate has expire" },
					"Currently valid": { "_desc": "certificate is currently valid" }
				},
				"Length": {
					"Conservative": { "_desc": "conservative certificate lifetime" },
					"Long": { "_desc": "long certificate lifetime" },
					"Very long": { "_desc": "very long certificate lifetime" },
					"Exceptionally Long": { "_desc": "exceptionally long certificate lifetime" }
				},
				"Not Before": {
					"_import": "timestamp_encoding_issues/*"
				},
				"Not After": {
					"_import": "timestamp_encoding_issues/*"
				}
			},
			"Issuer": {
				"_import": "*dn_issues/*{name=certificate issuer}"
			},
			"Subject": {
				"_import": "*dn_issues/*{name=certificate subject}"
			},
			"Serial Number": {
				"_import": "integer_checks:zero,neg,large{name=serial number}"
			},
			"X.509 Extensions": {
				"_label": "X509Exts",
				"All Unique": { "_desc": "all extensions unique" },
				"Duplicates Present": { "_desc": "duplicate extensions present" },
				"Empty Sequence": { "_desc": "extensions field is an empty sequence" },
				"Not Allowed": { "_desc": "extension are not permitted in this certificate" },
				"Malformed": { "_desc": "at least one malformed extension is present" },

				"Known Extensions": {
					"_label": "Ext",
					"Basic Constraints": {
						"_label": "BC",
						"Missing": { "_desc": "BC extension missing" },
						"Present but not Critical": { "_desc": "BC extension present, but not critical" },
						"Present and Critical": { "_desc": "BC extension present and critical" },
						"PathLen without CA": { "_desc": "BC extension contains pathLen constraint without CA attribute" },
						"PathLen without keyCertSign": { "_desc": "BC extension contains pathLen constraint without keyCertSign key usage" }
					},
					"Subject Key Identifier": {
						"_label": "SKI",
						"_import": "x509_ext_checks/*:missing,critical{name=SKI}",
						"Hashfunction": {
							"SHA1": { "_desc": "SKI extension has SHA-1 key ID" },
							"Other": { "_desc": "SKI extension has hash based key ID other than SHA-1" },
							"Arbitrary": { "_desc": "SKI extension has key ID that is not based on a known hash" }
					  }
					},
					"Authority Key Identifier": {
						"_label": "AKI",
						"_import": "x509_ext_checks/*:empty,missing,critical{name=AKI}",
						"CA name": {
							"_import": "*general_name_issues/*"
						},
						"Serial without CAName": { "_desc": "AKI extension has serial without CA name" },
						"CAname without Serial": { "_desc": "AKI extension has CA name without serial" },
						"No Key ID": { "_desc": "AKI extension contains no key ID" },
						"Empty Key ID": { "_desc": "AKI extension contains empty key ID" },
						"Long Key ID": { "_desc": "AKI extension contains long key ID" }
					},
					"Name Constraints": {
						"_label": "NC",
						"_import": "x509_ext_checks/*:empty,pres_crit,pres_noca{name=NC}",
						"Subtree": {
							"Minimum not Zero": { "_desc": "NC extension subtree minimum attribute is non-zero" },
							"Maximum present": { "_desc": "NC extension subtree maximum attribute is present" },
							"Name": {
								"_import": "general_name_issues/*",
								"Restiction on RegisteredID": { "_desc": "NC extension imposes restriction on RegisteredID" }
							}
						}
					},
					"Key Usage": {
						"_label": "KU",
						"_import": "bitstring_issues/*",
						"Missing": { "_desc": "KU extension missing" },
						"Empty": { "_desc": "KU extension empty" },
						"Too Long": { "_desc": "KU extension too long" },
						"Not Critical": { "_desc": "KU extension is not critical" },
						"SignCert but no CA": { "_desc": "KU extension contains signCert flag but is no CA" },
						"SignCert but no Basic Constraints": { "_desc": "KU extension contains signCert flag but has no Basic Constraints extension" }
					},
					"Extended Key Usage": {
						"_label": "EKU",
						"Empty": { "_desc": "EKU extension empty" },
						"Duplicate": { "_desc": "EKU extension contains duplicate usage OID" },
						"Any Usage Criticial": { "_desc": "EKU extension contains anyUsage flag but extension is marked critical" }
					},
					"Issuer Alternative Name": {
						"_label": "IAN",
						"Missing": { "_desc": "IAN extension missing although certificate issue header is empty" },
						"Critical": { "_desc": "IAN extension marked criticial" },
						"Name": {
							"_import": "general_name_issues/*"
						}
					},
					"Subject Alternative Name": {
						"_label": "SAN",
						"Name": {
							"_import": "general_name_issues/*"
						},
						"Empty": { "_desc": "SAN extension empty" },
						"Missing": { "_desc": "SAN extension missing" },
						"Critical": { "_desc": "SAN extension marked critical" },
						"Not Critical": { "_desc": "SAN extension marked not critical" },
						"Email Only": { "_desc": "SAN extension contains only email names" }
					},
					"Authority Information Access": {
						"_label": "AIA",
						"Empty": { "_desc": "AIA extension empty" },
						"Critical": { "_desc": "AIA extension marked critical" }
					},
					"Certificate Policies": {
						"_label": "CP",
						"Deprecated OID": { "_desc": "CP extension OID is deprecated" },
						"Duplicate OID": { "_desc": "CP extension contains duplicate policy OID" },
						"More than one policy": { "_desc": "CP extension contains more than one policy" },
						"Qualifier": {
							"Duplicate": { "_desc": "CP extension contains duplicate qualifier OID" },
							"Unknown": { "_desc": "CP extension contains unknown qualifier OID" },
							"AnyPolicy with Unknown Qualifier": { "_desc": "CP extension contains anyPolicy with unknown qualifier" }
						},
						"User Notice": {
							"_import": "asn1_encoding_issues/*",
							"Empty": { "_desc": "CP extension user notice is empty" },
							"Constraint Violation": { "_desc": "CP extension user notice violates ASN.1 constraint" },
							"noticeRef Present": { "_desc": "CP extension user notice contains noticeRef attribute" },
							"Explicit Text": {
								"Invalid String Type": { "_desc": "invalid explicitText string type used" },
								"IA5String": { "_desc": "explicitText uses IA5String instead of UTF8String" },
								"ControlCharacter": { "_desc": "explicitText contains control character" },
								"Absent": { "_desc": "explicitText field absent" }
							}
						},
						"Certification Practice Statement": {
							"_label": "CPS",
							"_import": [ "asn1_encoding_issues/*", "uri_issues" ],
							"Constraint Violation": { "_desc": "CP extension CPS violates ASN.1 constraint" }
						}
					},
					"Netscape Certificate Type": {
						"_label": "NSCT",
						"_import": [ "asn1_encoding_issues/*", "bitstring_issues/*" ],
						"Empty": { "_desc": "NSCT extension has no bits set" },
						"Unused Bit Set": { "_desc": "NSCT extension has 'unused' bit set" }
					},
					"CRL Distribution Points": {
						"_label": "CRLDP",
						"_import": "asn1_encoding_issues/*",
						"Empty": { "_desc": "CRLDP extension contains completely empty point" },
						"No Point with all reason bits": { "_desc": "CRLDP extension contains no point that has all reason bits set" },
						"Point with only Reasons": { "_desc": "CDLDP extension contains a point that only has the 'reason' bit set" },
						"Segmentation used": { "_desc": "CRLDP contains points that contain CRLs that are not universal" },
						"Point Name": {
							"_import": "general_name_issues/*",
							"NoLDAPorHTTPURI": { "_desc": "CRLDP point contains point with no HTTP or LDAP URI" },
							"Possibly no DER CRL served": { "_desc": "CRLDP point serves potentialla non-DER CRL" }
						},
						"Reasons": {
							"_import": "bitstring_issues/*",
							"Only int with all reason bits": { "_desc": "CRLDP contains no point that has all reason bits set" }
						},
						"CRL Issuer": {
							"_import": "general_name_issues/*"
						}
					},
					"Certificate Transparency Precertificate Poison": {
						"_label": "CTPP",
						"_import": "asn1_encoding_issues/*",
						"Is Precertificate": { "_desc": "CTPP extension indicates precertificate" },
						"Not Critical": { "_desc": "CTPP extension not marked critical" },
						"Invalid Payload": { "_desc": "CTPP extension contains invalid payload" }
					},
					"Certificate Transparency Signed Certificate Timestamps": {
						"_label": "CTSCT",
						"_import": "asn1_encoding_issues/*",
						"SCT": {
							"Unknown version": { "_desc": "CTSCTs extension contains SCT with unknown version" },
							"Implausible timestamp": { "_desc": "CTSCTs extension contains SCT with implausible timestamp" },
							"Invalid Signature Function": { "_desc": "CTSCTs extension contains SCT with invalid signature function" },
							"Invalid Hash Function": { "_desc": "CTSCTs extension contains SCT with invalid hash function" }
						}
					}
				},
				"Unknown Extension": {
					"_label": "Unknown",
					"Present": { "_desc": "unknown extension present" },
					"Critical": { "_desc": "unknown extension marked critical" }
				}
			}
		},
		"Signature": {
			"ECDSA": {
				"_import": [ "dsa_signature/*", "asn1_encoding_issues/*" ]
			},
			"DSA": {
				"_import": [ "dsa_signature/*", "asn1_encoding_issues/*" ]
			}
		}
	},

	"Usage Checks": {
		"Extended Key Usage": {
			"Excess Purpose Included": { },
			"Required Purpose Missing": { },
			"Extension Missing": { }
		},
		"Key Usage": {
			"Excess Usage Bit Included": { },
			"Required Usage Bit Missing": { },
			"Extension Missing": { }
		}
	},

	"Certificate Usage": {
		"_label": "Cert Usage",
		"Purposes": {
			"_label": "Purpose",
			"Client Certificate": {
				"_label": "Client Cert",
				"Extended Key Usage Mismatch": {
					"_label": "EKU Mismatch",
					"_desc": "extended key usage does not include clientAuth"
				}
			},
			"Server Certificate": {
				"_label": "Server Cert",
				"Extended Key Usage Mismatch": {
					"_label": "EKU Mismatch",
					"_desc": "extended key usage does not include serverAuth"
				}
			},
			"CA Certificate": {
				"_label": "CA Cert",
				"Extended Key Usage Mismatch": {
					"_label": "EKU Mismatch",
					"_desc": "extended key usage does not include TODO"
				}
			}
		},
		"CA Relationship": {
			"CA Certificate invalid as CA": { "_desc": "CA certificate is invalid for use as a CA" },
			"Signature": {
				"Verification Failure": { "_desc": "signature verification failure" },
				"Verification Success": { "_desc": "signature verification success" }
			},
			"Subject / Issuer": {
				"Match": { "_desc": "issuer of certificate equal to subject of CA certifiate" },
				"Mismatch": { "_desc": "issuer of certificate not equal to subject of CA certifiate" }
			},
			"Authority Key Identifier": {
				"_label": "AKI",
				"CA name": {
					"Match": { "_desc": "CA name in AKI extension matches subject of CA certifiate" },
					"Mismatch": { "_desc": "CA name in AKI extension does not match subject of CA certifiate" }
				},
				"Serial Number": {
					"_label": "Serial",
					"Match": { "_desc": "serial number in AKI extension matches serial of CA certifiate" },
					"Mismatch": { "_desc": "serial number in AKI extension does not match serial of CA certifiate" }
				},
				"Key ID": {
					"Match": { "_desc": "key ID in AKI extension matches key ID of CA certifiate SKI extension" },
					"Mismatch": { "_desc": "key ID in AKI extension does not match key ID of CA certifiate SKI extension" },
					"Uncheckable": { "_desc": "key ID in AKI extension cannot be checked against CA because CA contains no SKI extension" }
				}
			},
			"Validity Periods": {
				"_label": "Validity",
				"Full Overlap": { "_desc": "full overlap in validity periods" },
				"Partial Overlap": { "_desc": "partial overlap in validity periods" },
				"No Overlap": { "_desc": "no overlap in validity periods" },
				"Malformed Timestamp": { "_desc": "either certificate or CA certificate contains malformed timestamp which prevent assessment of validity period" }
			}
		}
	}
}
